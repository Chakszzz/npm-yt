name: Release

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  latest-tag:
    name: Run latest-tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run latest-tag
        uses: EndBug/latest-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  publish-npm:
    name: Publish on NPM
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js (without cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Ensure pnpm-lock.yaml exists
        run: |
          if [ ! -f pnpm-lock.yaml ]; then
            echo "pnpm-lock.yaml not found, generating..."
            pnpm install --lockfile-only
          else
            echo "pnpm-lock.yaml already exists."
          fi

      - name: Install Node.js (with cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile

      - name: Update package version automatically
        run: |
          CURRENT_VERSION=$(npm show @er-npm/scraper version)
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF++; print $1"."$2"."$3}' OFS=.)
          echo "Current version: $CURRENT_VERSION"
          echo "New version: $NEW_VERSION"
          jq --arg new_version "$NEW_VERSION" '.version = $new_version' package.json > package.tmp.json && mv package.tmp.json package.json
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit updated package.json
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add package.json
          git commit -m "chore: bump version to ${{ env.VERSION }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Publish package to NPM
        run: |
          pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM }}
          NPM_CONFIG_PROVENANCE: true

      - name: Deprecate previous version
        run: |
          PREV_VERSION=$(npm show @er-npm/scraper versions --json | jq -r '.[-2]')
          if [ "$PREV_VERSION" != "null" ] && [ ! -z "$PREV_VERSION" ]; then
            echo "Deprecating previous version: $PREV_VERSION"
            pnpm deprecate "@er-npm/scraper@$PREV_VERSION" "Versi ini telah usang, silakan perbarui ke versi terbaru."
          else
            echo "No previous version found, skipping deprecation."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM }}